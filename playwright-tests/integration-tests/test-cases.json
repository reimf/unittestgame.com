[
    {
        "years": [],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return undefined\n}"
        ],
        "numberOfUnitTestsStillNeeded": 4
    },
    {
        "years": [2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 4
    },
    {
        "years": [2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}", 
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 3
    },
    {
        "years": [2024, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2025, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2200, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2300, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  return false\n}",
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2400, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 2
    },
    {
        "years": [2024, 2025, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2025, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2025, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2025, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2200, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2300, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2400, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2024, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2024, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2024, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2024, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2200, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2300, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2025, 2400, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2024, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2024, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2024, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2024, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2025, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2300, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2200, 2400, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2024, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2025, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2200, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2300, 2400, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2024, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2025, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2200, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 200 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return undefined\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return true\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2400, 2300, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 1
    },
    {
        "years": [2024, 2025, 2200, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2200, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2300, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2300, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2400, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2025, 2400, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2025, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2025, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2300, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2300, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2400, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2200, 2400, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2025, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2025, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2200, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2200, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2400, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2300, 2400, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2025, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2025, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2200, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2200, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2300, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2024, 2400, 2300, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2200, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2200, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2300, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2300, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2400, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2024, 2400, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2024, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2024, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2300, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2300, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2400, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2200, 2400, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2024, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2024, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2200, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2200, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2400, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2300, 2400, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2024, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2024, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2200, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2200, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2300, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2025, 2400, 2300, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2025, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2025, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2300, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2300, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2400, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2024, 2400, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2024, 2300, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2024, 2400, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2300, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2300, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2400, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2025, 2400, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2024, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2024, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2025, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2025, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2400, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2300, 2400, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2024, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2024, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2025, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2025, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2300, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2200, 2400, 2300, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2025, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2025, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2200, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2200, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2400, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2024, 2400, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2024, 2200, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2024, 2400, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2200, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2200, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2400, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2025, 2400, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2024, 2025, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2024, 2400, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2025, 2024, 2400],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2025, 2400, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2400, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2200, 2400, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2024, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2024, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2025, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2025, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2200, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2300, 2400, 2200, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2025, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2025, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2200, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2200, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2300, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2024, 2300, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2024, 2200, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2024, 2300, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2200, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2200, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2300, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2025, 2300, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2024, 2025, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2024, 2300, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2025, 2024, 2300],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2025, 2300, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2300, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2200, 2300, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2024, 2025, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2024, 2200, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2025, 2024, 2200],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2025, 2200, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2200, 2024, 2025],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    },
    {
        "years": [2400, 2300, 2200, 2025, 2024],
        "simplestCoveredCandidate": "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}",
        "simplestPassingCandidatesMutationTesting": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "simplestPassingCandidatesTestDrivenDevelopment": [
            "function isLeapYear(year) {\n  if (year % 400 === 0) return true\n  if (year % 100 === 0) return false\n  if (year % 4 === 0) return true\n  return false\n}"
        ],
        "numberOfUnitTestsStillNeeded": 0
    }
]